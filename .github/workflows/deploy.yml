# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "load_branch" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Push-Data-To-DVC:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Install python dependencies 
        run: pip install -r requirements.txt

      # Runs a set of commands using the runners shell
      - name: Instantiate DVC
        run: |
          dvc init -f 
          dvc add -f backend/classification/data
      
      # Runs a set of commands using the runners shell
      - name: Set DVC Remotes
        run: |
          dvc remote add -d resident_data azure://resident-storage/data 
          dvc remote modify --local resident_data account_name ${{secrets.DVC_REMOTE_NAME}}
          dvc remote modify --local resident_data sas_token ${{secrets.DVC_SAS_TOKEN}}
      
      # Runs a set of commands using the runners shell
      - name: Release data to DVC remote
        run: 
          dvc push

  Deploy-Backend:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Log into Docker Hub
        run: echo ${{ secrets.HEROKU_API_KEY }} | docker login --username=_ --password-stdin registry.heroku.com

      # Runs a set of commands using the runners shell
      - name: Build and push Docker image
        run: |
          docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web ./backend 
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
      
      # Runs a set of commands using the runners shell
      - name: Release Backend to Heroku
        run: |
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}






